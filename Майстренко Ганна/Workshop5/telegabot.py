import telebot
import database_connection
import db_classes
import check_function

bot = telebot.TeleBot('1240952041:AAGgpZ6C_-Ttga9fFgFKgdFImeV6GLcjd1s')

from telebot import types

@bot.message_handler(commands=['start'])

def handle_text(message):
    keyboard1 = telebot.types.ReplyKeyboardMarkup()
    keyboard1.row('–ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞ü•Æ')
    keyboard1.row('–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èüìÑ')
    keyboard1.row('–ü–æ–º–æ—â—å‚ùì')

    bot.send_message(message.chat.id,
                     '–ì–æ—Ç–æ–≤–∏—Ç—å —Å—Ç–∞–ª–æ –µ—â—ë –ø—Ä–æ—â–µ!\n'
                     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å,' + str(message.from_user.username) + '\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å \n–Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã, –Ω–æ\n—Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ –∫—É–ª–∏–Ω–∞—Ä–Ω—É—é –∫–Ω–∏–≥—É\n –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∏–∂–µ ',
                     reply_markup=keyboard1)

#
@bot.message_handler(commands=['help'])

def handle_text(message):
    bot.send_message(message.from_user.id,
                     '–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤\n''–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–æ—Ç–µ:\n''/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n''/help - –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n''/first_dishes - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—É–ø–æ–≤\n''/salads - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∞–ª–∞—Ç–æ–≤\n''/main_dishes - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Å–Ω–æ–≤–Ω—ñ—Ö –±–ª—é–¥,\n''/desserts - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ—Å—Å–µ—Ä—Ç–æ–≤,\n''/statistic - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ü–µ–Ω–æ–∫')

@bot.message_handler(commands=['first_dishes'])
def handle_text(message):
    result = check_function.see_all_soups()
    print(result)
    for i in range(len(result)):
        bot.send_message(message.from_user.id, result[i])

@bot.message_handler(commands=['salads'])
def handle_text(message):
    result = check_function.see_all_salads()
    for i in range(len(result)):
        bot.send_message(message.from_user.id, result[i])

@bot.message_handler(commands=['main_dishes'])
def handle_text(message):
    result = check_function.see_all_main_dishes()
    for i in range(len(result)):
        bot.send_message(message.from_user.id, result[i])

@bot.message_handler(commands=['desserts'])
def handle_text(message):
    result = check_function.see_all_desserts()
    for i in range(len(result)):
        bot.send_message(message.from_user.id, result[i])

@bot.message_handler(commands=['statistic'])
def handle_text(message):

    check_function.graph()
    bot.send_message(message.from_user.id,'C–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ü–µ–Ω–æ–∫')

@bot.message_handler(content_types=['text'])
def handle_text(message):

    if message.text == '–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èüìÑ':
        bot.send_message(message.from_user.id,
                         '1. –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /start\n''2.–î–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–ª–∞–≤–∏—à—É "–ø–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞"\n''3.–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏,–í–ê–ñ–ù–û,–±–æ—Ç —Å–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –±–ª—é–¥–æ –≤ –∑–∞–¥–∞–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ç–æ–ª—å–∫–æ, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n''4.–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ä–µ—Ü–µ–ø—Ç –±–ª—é–¥–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ  –ø—Ä–æ—á–∏–∞—Ç—Ç—å –µ–≥–æ,–ø–æ–¥—Ç–≤–µ—Ä–¥–∏–≤ —Å–≤–æ–π –≤—ã–±–æ—Ä –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—é—é –∫–ª–∞–≤–∏—à—É\n''5.–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –µ–º –æ—Ü–µ–Ω–∫—É –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.')
    elif message.text == '–ü–æ–º–æ—â—å‚ùì':

        bot.send_message(message.from_user.id,
                         '–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤\n''–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–æ—Ç–µ:\n''/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n''/help - –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n''/first_dishes - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—É–ø–æ–≤\n''/salads - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∞–ª–∞—Ç–æ–≤\n''/main_dishes - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Å–Ω–æ–≤–Ω—ñ—Ö –±–ª—é–¥,\n''/desserts - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ—Å—Å–µ—Ä—Ç–æ–≤,\n''/statistic - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ü–µ–Ω–æ–∫')
    elif message.text == '–ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞ü•Æ':

        keyboard = types.InlineKeyboardMarkup()
        key_sup = types.InlineKeyboardButton(text='–ü–µ—Ä–≤—ã–µ –±–ª—é–¥–∞ üç≤', callback_data='soups')
        # –ò –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω
        keyboard.add(key_sup)
        key_main = types.InlineKeyboardButton(text='–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞ ü•ò', callback_data='main_dishes')
        keyboard.add(key_main)
        key_salad = types.InlineKeyboardButton(text='–°–∞–ª–∞—Ç—ã ü•ó', callback_data='salads')
        keyboard.add(key_salad)
        key_sweet = types.InlineKeyboardButton(text='–î–µ—Å—Å–µ—Ä—Ç—ã üç∞', callback_data='sweets')
        keyboard.add(key_sweet)

        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é.", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'soups')
def callback_worker(call):

        keyboard = types.InlineKeyboardMarkup()
        key_text = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Ñ–æ—Ä–ºe', callback_data='text')
        keyboard.add(key_text)
        key_video = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ä–µ—Ü–µ–ø—Ç', callback_data='video')
        keyboard.add(key_video)
        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞—Ç–Ω—Ç–æ–≤", reply_markup=keyboard)


        @bot.callback_query_handler(func=lambda call: call.data == 'text')
        def callback_worker(call):
                sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—É–ø–∞ üç≤')
                bot.register_next_step_handler(sent,text_recipe)

        @bot.callback_query_handler(func=lambda call: call.data == 'video')
        def callback_worker(call):
                sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—É–ø–∞ üç≤')
                bot.register_next_step_handler(sent, video_recipe)

@bot.callback_query_handler(func=lambda call: call.data == 'main_dishes')
def callback_worker(call):
    keyboard = types.InlineKeyboardMarkup()
    key_text = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Ñ–æ—Ä–ºe', callback_data='text')
    keyboard.add(key_text)
    key_video = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ä–µ—Ü–µ–ø—Ç', callback_data='video')
    keyboard.add(key_video)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞—Ç–Ω—Ç–æ–≤", reply_markup=keyboard)


    @bot.callback_query_handler(func=lambda call: call.data == 'text')
    def callback_worker(call):
        sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–ª—é–¥–∞ü•ò')
        bot.register_next_step_handler(sent,text_recipe)

    @bot.callback_query_handler(func=lambda call: call.data == 'video')
    def callback_worker(call):
        sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–ª—é–¥–∞ü•ò')
        bot.register_next_step_handler(sent, video_recipe)


@bot.callback_query_handler(func=lambda call: call.data == 'salads')
def callback_worker(call):
    keyboard = types.InlineKeyboardMarkup()
    key_text = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Ñ–æ—Ä–ºe', callback_data='text')
    keyboard.add(key_text)
    key_video = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ä–µ—Ü–µ–ø—Ç', callback_data='video')
    keyboard.add(key_video)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞—Ç–Ω—Ç–æ–≤", reply_markup=keyboard)


    @bot.callback_query_handler(func=lambda call: call.data == 'text')
    def callback_worker(call):
        sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ  —Å–∞–ª–∞—Ç–∞ü•ó')
        bot.register_next_step_handler(sent, text_recipe)

    @bot.callback_query_handler(func=lambda call: call.data == 'video')
    def callback_worker(call):
        sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∞–ª–∞—Ç–∞ü•ó')
        bot.register_next_step_handler(sent, video_recipe)

@bot.callback_query_handler(func=lambda call: call.data == 'sweets')
def callback_worker(call):
    keyboard = types.InlineKeyboardMarkup()
    key_text = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Ñ–æ—Ä–ºe', callback_data='text')
    keyboard.add(key_text)
    key_video = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Ä–µ—Ü–µ–ø—Ç', callback_data='video')
    keyboard.add(key_video)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞—Ç–Ω—Ç–æ–≤", reply_markup=keyboard)


    @bot.callback_query_handler(func=lambda call: call.data == 'text')
    def callback_worker(call):
        sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Å—Å–µ—Ä—Ç–∞ üç∞')
        bot.register_next_step_handler(sent,text_recipe)

    @bot.callback_query_handler(func=lambda call: call.data == 'video')
    def callback_worker(call):
        sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Å—Å–µ—Ä—Ç–∞ üç∞')
        bot.register_next_step_handler(sent, video_recipe)


def text_recipe(message):

        add = check_function.check_is_dish_exist((message.text).upper())
        if bool(add) is False:
            result = check_function.if_not_exist_dish()
            list(result)
            print(result)
            bot.send_message(message.from_user.id, result[0])
            for i in range(len(result[1])):
                bot.send_message(message.from_user.id, result[1][i])

        else:
            result = check_function.result_of_search((message.text).upper())
            list(result)
            print(result)
            for i in range(len(result)):
                bot.send_message(message.from_user.id, result[i])

            evaluating(message)


def video_recipe(message):
    add = check_function.get_video_recipe((message.text).upper())
    if bool(add) is False:
        result = check_function.if_not_exist_dish()
        list(result)
        print(result)
        bot.send_message(message.from_user.id, result[0])
        for i in range(len(result[1])):
            bot.send_message(message.from_user.id, result[1][i])

    else:
        result = check_function.get_exsist_video_recipe((message.text).upper())
        print(result)
        bot.send_message(message.from_user.id, result)
        print(message)
        evaluating(message)
#
# def choos_dish(message):
#     check_function.check_dish_category(message.text)

def evaluating(message):
    keyboard3 = types.InlineKeyboardMarkup()
    key_one = types.InlineKeyboardButton(text='1', callback_data='one')
    # –ò –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω
    keyboard3.add(key_one)
    key_two = types.InlineKeyboardButton(text='2', callback_data='two')
    keyboard3.add(key_two)
    key_three = types.InlineKeyboardButton(text='3', callback_data='three')
    keyboard3.add(key_three)
    key_four = types.InlineKeyboardButton(text='4', callback_data='four')
    keyboard3.add(key_four)
    key_five = types.InlineKeyboardButton(text='5', callback_data='five')
    keyboard3.add(key_five)
    bot.send_message(message.chat.id, "–û—Ü–µ–Ω–∏—Ç–µ,–ø–æ–∂–∞–ª—É–π—Å—Ç–∞,—Ä–∞–±–æ—Ç—É –±–æ—Ç–∞", reply_markup=keyboard3)

    @bot.callback_query_handler(func=lambda call: call.data == 'one')
    def callback_worker(call):
        print(message.text)
        check_function.add_user_mark(1, str(message.from_user.username), (message.text).upper())
        continue_working_with_bot(message)

    @bot.callback_query_handler(func=lambda call: call.data == 'two')
    def callback_worker(call):
        print(message.text)
        check_function.add_user_mark(2, str(message.from_user.username), (message.text).upper())
        continue_working_with_bot(message)

    @bot.callback_query_handler(func=lambda call: call.data == 'three')
    def callback_worker(call):
        print(message.text)
        check_function.add_user_mark(3, str(message.from_user.username), (message.text).upper())
        continue_working_with_bot(message)

    @bot.callback_query_handler(func=lambda call: call.data == 'four')
    def callback_worker(call):
        print(message.text)
        check_function.add_user_mark(4, str(message.from_user.username), (message.text).upper())
        continue_working_with_bot(message)

    @bot.callback_query_handler(func=lambda call: call.data == 'five')
    def callback_worker(call):
        print(message.text)
        check_function.add_user_mark(5, str(message.from_user.username), (message.text).upper())
        continue_working_with_bot(message)


def continue_working_with_bot(message):
    keyboard4 = types.InlineKeyboardMarkup()
    key_one = types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', callback_data='write_comment')
    # –ò –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω
    keyboard4.add(key_one)
    key_two = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='see_comments')
    keyboard4.add(key_two)
    key_three = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ü–µ–Ω–æ–∫', callback_data='see_rating')
    keyboard4.add(key_three)
    bot.send_message(message.chat.id, "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º", reply_markup=keyboard4)

    @bot.callback_query_handler(func=lambda call: call.data == 'write_comment')
    def callback_worker(call):
        print(message.text)
        sent = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')
        bot.register_next_step_handler(sent,comments)



    @bot.callback_query_handler(func=lambda call: call.data == 'see_comments')
    def callback_worker(call):
        bot.send_message(call.message.chat.id, '–û—Ç–∑—ã–≤—ã –¥—Ä—É–≥—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
        result = check_function.see_users_comments()
        print(result)
        for i in range(len(result)):
            bot.send_message(message.chat.id, str((list(result[i]))[0])+': '+str((list(result[i]))[1]))

    @bot.callback_query_handler(func=lambda call: call.data == 'see_rating')
    def callback_worker(call):
        bot.send_message(call.message.chat.id, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ü–µ–Ω–æ–∫')
        result = check_function.graph()
        print(result)
        bot.send_message(message.chat.id,result)

    def comments(message):
        check_function.add_comments(message.text, str(message.from_user.username))
        print(message.text)
        bot.send_message(message.chat.id,'–°–ø–∞—Å–∏–±–æ, –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')

bot.polling()